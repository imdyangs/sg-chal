{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/imdyangs/projects/shogun/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst url = \"https://api.graphql.jobs/\";\n\nconst cleanData = jobs => {\n  return jobs.map(job => {\n    if (job.cities.length === 0) job.cities[0] = 'No City';else {\n      job.citiesString = job.cities.join(\" • \");\n    }\n    job.postedAt = new Date(job.postedAt);\n    return job;\n  });\n};\n\nconst sortJobsByRecentDate = jobs => {\n  return jobs.sort((a, b) => {\n    return b.postedAt - a.postedAt;\n  });\n};\n\nconst JobTab = job => {\n  console.log(job);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-tab\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-company\",\n        children: job.company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-metadata\",\n        children: [job.title, \" \\u2022 \", job.citiesString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_c = JobTab;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: []\n    };\n  }\n\n  async componentDidMount() {\n    const query = `\n      query {\n        jobs {\n          id\n          title\n          cities {\n            name\n            id\n          }\n          description\n          company {\n            id\n            name\n            websiteUrl\n          }\n          postedAt\n        }\n      }\n    `;\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch(url, opts).then(res => res.json()).then(({\n      data\n    }) => {\n      let jobs = cleanData(data.jobs);\n      jobs = sortJobsByRecentDate(jobs);\n      this.setState({\n        jobs\n      });\n    }).catch(console.error);\n  }\n\n  render() {\n    console.log(this.state.jobs[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobTab\");","map":{"version":3,"sources":["/Users/imdyangs/projects/shogun/src/App.js"],"names":["React","url","cleanData","jobs","map","job","cities","length","citiesString","join","postedAt","Date","sortJobsByRecentDate","sort","a","b","JobTab","console","log","company","name","title","App","Component","constructor","state","componentDidMount","query","opts","method","headers","body","JSON","stringify","fetch","then","res","json","data","setState","catch","error","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,MAAMC,GAAG,GAAG,2BAAZ;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AACxB,SAAOA,IAAI,CAACC,GAAL,CAASC,GAAG,IAAI;AACrB,QAAIA,GAAG,CAACC,MAAJ,CAAWC,MAAX,KAAsB,CAA1B,EAA6BF,GAAG,CAACC,MAAJ,CAAW,CAAX,IAAgB,SAAhB,CAA7B,KACK;AACHD,MAAAA,GAAG,CAACG,YAAJ,GAAmBH,GAAG,CAACC,MAAJ,CAAWG,IAAX,CAAgB,KAAhB,CAAnB;AACD;AACDJ,IAAAA,GAAG,CAACK,QAAJ,GAAe,IAAIC,IAAJ,CAASN,GAAG,CAACK,QAAb,CAAf;AACA,WAAOL,GAAP;AACD,GAPM,CAAP;AAQD,CATD;;AAWA,MAAMO,oBAAoB,GAAGT,IAAI,IAAI;AACnC,SAAOA,IAAI,CAACU,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,WAAOA,CAAC,CAACL,QAAF,GAAaI,CAAC,CAACJ,QAAtB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMM,MAAM,GAAGX,GAAG,IAAI;AACpBY,EAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACGA,GAAG,CAACc,OAAJ,CAAYC;AADf;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBACGf,GAAG,CAACgB,KADP,cACiBhB,GAAG,CAACG,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAWA,CAbF;;KAAMQ,M;;AAeN,MAAMM,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXtB,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAED,QAAMuB,iBAAN,GAA0B;AACxB,UAAMC,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAlBI;AAmBA,UAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFE;AAGXC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA;AAAF,OAAf;AAHK,KAAb;AAMAO,IAAAA,KAAK,CAACjC,GAAD,EAAM2B,IAAN,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AAClB,UAAInC,IAAI,GAAGD,SAAS,CAACoC,IAAI,CAACnC,IAAN,CAApB;AACAA,MAAAA,IAAI,GAAGS,oBAAoB,CAACT,IAAD,CAA3B;AACA,WAAKoC,QAAL,CAAc;AAAEpC,QAAAA;AAAF,OAAd;AACD,KANH,EAOGqC,KAPH,CAOSvB,OAAO,CAACwB,KAPjB;AAQD;;AAEDC,EAAAA,MAAM,GAAG;AACPzB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWtB,IAAX,CAAgB,CAAhB,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA1D+B;;AA6DlC,eAAemB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nconst url = \"https://api.graphql.jobs/\"\n\nconst cleanData = jobs => {\n  return jobs.map(job => {\n    if (job.cities.length === 0) job.cities[0] = 'No City';\n    else {\n      job.citiesString = job.cities.join(\" • \")\n    }\n    job.postedAt = new Date(job.postedAt);\n    return job;\n  })\n}\n\nconst sortJobsByRecentDate = jobs => {\n  return jobs.sort((a, b) => {\n    return b.postedAt - a.postedAt;\n  })\n}\n\nconst JobTab = job => {\n  console.log(job)\n  return (\n  <div className=\"job-tab\">\n    <div className=\"job-header\">\n      <div className=\"job-company\">\n        {job.company.name}\n      </div>\n      <div className=\"job-metadata\">\n        {job.title} • {job.citiesString}\n      </div>\n    </div>\n  </div>\n)}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: [],\n    }\n  }\n\n  async componentDidMount() {\n    const query = `\n      query {\n        jobs {\n          id\n          title\n          cities {\n            name\n            id\n          }\n          description\n          company {\n            id\n            name\n            websiteUrl\n          }\n          postedAt\n        }\n      }\n    `\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query })\n    };\n\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(({ data }) => {\n        let jobs = cleanData(data.jobs);\n        jobs = sortJobsByRecentDate(jobs);\n        this.setState({ jobs });\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    console.log(this.state.jobs[0])\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <div className=\"title\">\n            Jobs\n          </div>\n          <div className=\"job-content\">\n             {/* <JobTab job={this.state.jobs[0]}/> */}\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}