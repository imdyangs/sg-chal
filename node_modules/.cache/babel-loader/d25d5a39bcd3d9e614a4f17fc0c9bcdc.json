{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/imdyangs/projects/shogun/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst url = \"https://api.graphql.jobs/\";\n\nconst cleanData = jobs => {\n  jobs = cleanCityData(jobs);\n};\n\nconst cleanCityData = jobs => {\n  return jobs.map(job => {\n    if (job.cities.length === 0) job.cities[0] = 'NO_CITY';\n    return job;\n  });\n};\n\nconst sortJobsByRecentDate = jobs => {\n  return jobs.sort((a, b) => {\n    return new Date(a.postedAt) - new Date(b.postedAt);\n  });\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: []\n    };\n  }\n\n  async componentDidMount() {\n    const query = `\n      query {\n        jobs {\n          id\n          title\n          cities {\n            name\n            id\n          }\n          description\n          company {\n            id\n            name\n            websiteUrl\n          }\n          postedAt\n        }\n      }\n    `;\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch(url, opts).then(res => res.json()).then(({\n      data\n    }) => {\n      const jobs = cleanData(data.jobs);\n      this.setState({\n        jobs\n      }, console.log(this.state));\n    }).catch(console.error);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job-position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job-location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/imdyangs/projects/shogun/src/App.js"],"names":["React","url","cleanData","jobs","cleanCityData","map","job","cities","length","sortJobsByRecentDate","sort","a","b","Date","postedAt","App","Component","constructor","state","componentDidMount","query","opts","method","headers","body","JSON","stringify","fetch","then","res","json","data","setState","console","log","catch","error","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,MAAMC,GAAG,GAAG,2BAAZ;;AAGA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AACxBA,EAAAA,IAAI,GAAGC,aAAa,CAACD,IAAD,CAApB;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAGD,IAAI,IAAI;AAC5B,SAAOA,IAAI,CAACE,GAAL,CAASC,GAAG,IAAI;AACrB,QAAIA,GAAG,CAACC,MAAJ,CAAWC,MAAX,KAAsB,CAA1B,EAA6BF,GAAG,CAACC,MAAJ,CAAW,CAAX,IAAgB,SAAhB;AAC7B,WAAOD,GAAP;AACD,GAHM,CAAP;AAID,CALD;;AAOA,MAAMG,oBAAoB,GAAGN,IAAI,IAAI;AACnC,SAAOA,IAAI,CAACO,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,WAAO,IAAIC,IAAJ,CAASF,CAAC,CAACG,QAAX,IAAuB,IAAID,IAAJ,CAASD,CAAC,CAACE,QAAX,CAA9B;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXf,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAED,QAAMgB,iBAAN,GAA0B;AACxB,UAAMC,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAlBI;AAmBA,UAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFE;AAGXC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA;AAAF,OAAf;AAHK,KAAb;AAMAO,IAAAA,KAAK,CAAC1B,GAAD,EAAMoB,IAAN,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AAClB,YAAM5B,IAAI,GAAGD,SAAS,CAAC6B,IAAI,CAAC5B,IAAN,CAAtB;AACA,WAAK6B,QAAL,CAAc;AACZ7B,QAAAA;AADY,OAAd,EAEG8B,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB,CAFH;AAGD,KAPH,EAQGiB,KARH,CAQSF,OAAO,CAACG,KARjB;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AApE+B;;AAuElC,eAAetB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nconst url = \"https://api.graphql.jobs/\"\n\n\nconst cleanData = jobs => {\n  jobs = cleanCityData(jobs)\n}\n\nconst cleanCityData = jobs => {\n  return jobs.map(job => {\n    if (job.cities.length === 0) job.cities[0] = 'NO_CITY';\n    return job;\n  })\n}\n\nconst sortJobsByRecentDate = jobs => {\n  return jobs.sort((a, b) => {\n    return new Date(a.postedAt) - new Date(b.postedAt);\n  })\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: [],\n    }\n  }\n\n  async componentDidMount() {\n    const query = `\n      query {\n        jobs {\n          id\n          title\n          cities {\n            name\n            id\n          }\n          description\n          company {\n            id\n            name\n            websiteUrl\n          }\n          postedAt\n        }\n      }\n    `\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query })\n    };\n\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(({ data }) => {\n        const jobs = cleanData(data.jobs)\n        this.setState({\n          jobs,\n        }, console.log(this.state))\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <div className=\"title\">\n            Jobs\n          </div>\n          <div className=\"job-content\">\n\n            <div className=\"job-tab\">\n              <div className=\"job-title\">\n\n              </div>\n              <div className=\"job-description\">\n                <div className=\"job-position\"></div>\n                <div className=\"job-location\"></div>\n              </div>\n            </div>\n\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}